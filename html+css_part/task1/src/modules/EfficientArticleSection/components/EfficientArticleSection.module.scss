@use "/src/styles/variables.scss";
@use "/src/ui/Button/components/Button.module.scss" as buttonModule;

.efficientArticleSection {
  padding: 0 map-get($map: variables.$spaces, $key: space-80);
  display: flex;
  gap: map-get($map: variables.$spaces, $key: space-80);
  position: relative;
  div {
    &:first-of-type {
      margin: auto 0;
      h2 {
        font-family: map-get(
          $map: variables.$text-font-family,
          $key: font-family-secondary
        );
        font-size: map-get($map: variables.$text-size, $key: font-size-40);
        margin: map-get($map: variables.$spaces, $key: space-15) 0
          map-get($map: variables.$spaces, $key: space-27);
        color: map-get($map: variables.$text-colors, $key: dark-color);
      }
      p {
        margin: 0 0 map-get($map: variables.$spaces, $key: space-38);
        font-family: map-get(
          $map: variables.$text-font-family,
          $key: font-family-primary
        );
        font-size: map-get($map: variables.$text-size, $key: font-size-18);
        line-height: map-get($map: variables.$spaces, $key: space-27);
        word-wrap: break-word;
        color: map-get($map: variables.$text-colors, $key: lighter-dark-color);
        &:nth-last-of-type(2) {
          display: flex;
          gap: map-get($map: variables.$spaces, $key: space-26);
          margin: 0 0 map-get($map: variables.$spaces, $key: space-31);
          div {
            margin: 0;
            h3 {
              font-family: map-get(
                $map: variables.$text-font-family,
                $key: font-family-secondary
              );
              font-size: map-get(
                $map: variables.$text-size,
                $key: font-size-20
              );
              font-weight: map-get($map: variables.$text-weight, $key: normal);
              color: map-get($map: variables.$text-colors, $key: dark-color);
              margin: map-get($map: variables.$spaces, $key: space-16) 0
                map-get($map: variables.$spaces, $key: space-17);
            }
            p {
              margin: 0;
              font-size: map-get(
                $map: variables.$text-size,
                $key: font-size-16
              );
              color: map-get(
                $map: variables.$text-colors,
                $key: lighter-dark-color
              );
              word-wrap: break-word;
            }
          }
        }
        &:last-of-type {
          display: flex;
          justify-content: flex-start;
          align-items: center;
          button {
            font-family: map-get(
              $map: variables.$text-font-family,
              $key: font-family-primary
            );
            font-weight: map-get($map: variables.$text-weight, $key: bold);
            &:first-of-type {
              margin-right: map-get($map: variables.$spaces, $key: space-16);
              @include buttonModule.button-style(
                map-get($map: variables.$text-colors, $key: dark-color),
                map-get(
                  $map: variables.$background-colors,
                  $key: primary-color
                ),
                64px,
                2px,
                none,
                map-get($map: variables.$spaces, $key: space-14),
                map-get($map: variables.$spaces, $key: space-26)
              );
              margin-right: map-get($map: variables.$spaces, $key: space-32);
            }
            &:last-of-type {
              @include buttonModule.button-style(
                map-get($map: variables.$text-colors, $key: dark-color),
                none,
                0,
                none,
                none,
                0,
                0
              );
              margin-right: map-get($map: variables.$spaces, $key: space-8);
            }
          }
          span.moreBtn {
            img {
              position: relative;
              bottom: 0;
              top: 0;
            }
          }
        }
      }
    }
    &:last-of-type {
      bottom: map-get($map: variables.$spaces, $key: space-48);
      right: map-get($map: variables.$spaces, $key: space-308);
    }
  }
}
